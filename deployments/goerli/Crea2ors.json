{
  "address": "0xe0E09B0f3789150f3EF364a3e8C394c6a909128E",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "safeAdd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "c",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "safeDiv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "c",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "safeMul",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "c",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "safeSub",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "c",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2ed3a1db24e50b6f7b4f0bbfbde47aec6255d0ef58f45f899a0d0117077dd920",
  "receipt": {
    "to": null,
    "from": "0xC5b1806408e15D70998B64eb5f8C96B9A83121FB",
    "contractAddress": "0xe0E09B0f3789150f3EF364a3e8C394c6a909128E",
    "transactionIndex": 8,
    "gasUsed": "1222525",
    "logsBloom": "0x
    "blockHash": "0xaaa40590f8b29287066a0ac5ec73bf35f4f030a567ae9b0892a0428de4d6fcb5",
    "transactionHash": "0x2ed3a1db24e50b6f7b4f0bbfbde47aec6255d0ef58f45f899a0d0117077dd920",
    "logs": [
      {
        "transactionIndex": 8,
        "blockNumber": 7280431,
        "transactionHash": "0x2ed3a1db24e50b6f7b4f0bbfbde47aec6255d0ef58f45f899a0d0117077dd920",
        "address": "0xe0E09B0f3789150f3EF364a3e8C394c6a909128E",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c5b1806408e15d70998b64eb5f8c96b9a83121fb"
        ],
        "data": "0x",
        "logIndex": 14,
        "blockHash": "0xaaa40590f8b29287066a0ac5ec73bf35f4f030a567ae9b0892a0428de4d6fcb5"
      },
      {
        "transactionIndex": 8,
        "blockNumber": 7280431,
        "transactionHash": "0x2ed3a1db24e50b6f7b4f0bbfbde47aec6255d0ef58f45f899a0d0117077dd920",
        "address": "0xe0E09B0f3789150f3EF364a3e8C394c6a909128E",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c5b1806408e15d70998b64eb5f8c96b9a83121fb"
        ],
        "data": "0x0000000000000000000000000000000000000000000000006f05b59d3b200000",
        "logIndex": 15,
        "blockHash": "0xaaa40590f8b29287066a0ac5ec73bf35f4f030a567ae9b0892a0428de4d6fcb5"
      }
    ],
    "blockNumber": 7280431,
    "cumulativeGasUsed": "4147504",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5c14cc61fbbe750a300cb5412a3f7b3c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constrctor function Initializes contract with initial supply tokens to the creator of the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Crea2ors_v4.0.sol\":\"Crea2ors\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Crea2ors_v4.0.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity ^0.8.0;\\n\\n// ----------------------------------------------------------------------------\\n// ERC Token Standard #20 Interface\\n//\\n// ----------------------------------------------------------------------------\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\n// ----------------------------------------------------------------------------\\n// Safe Math Library\\n// ----------------------------------------------------------------------------\\ncontract SafeMath {\\n    function safeAdd(uint a, uint b) public pure returns (uint c) {\\n        c = a + b;\\n        require(c >= a, \\\"SafeAdd error\\\");\\n    }\\n    function safeSub(uint a, uint b) public pure returns (uint c) {\\n        require(b <= a, \\\"SafeSub error\\\"); c = a - b; } function safeMul(uint a, uint b) public pure returns (uint c) { c = a * b; require(a == 0 || c / a == b); } function safeDiv(uint a, uint b) public pure returns (uint c) { require(b > 0);\\n        c = a / b;\\n    }\\n}\\n\\n// Context Library\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\\n// Ownable Library\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\\n\\ncontract Crea2ors is IERC20, Ownable, SafeMath {\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals; // 18 decimals is the strongly suggested default, avoid changing it\\n\\n    uint256 public _totalSupply;\\n\\n    struct holder {\\n      uint lockupAmount;\\n      uint unlockTime;\\n      bool bCreated;\\n    }\\n\\n    mapping(address => uint) balances;\\n    mapping(address => mapping(address => uint)) allowed;\\n    mapping(address => holder) holders;\\n\\n    address private _rewardPoolAddress = 0x26810913499451a31a9E17C0b021b326C0a73c94;\\n    address private _developmentAddress = 0x5aAd91b0c9d866aCeC2768dcf500b38537F856Fb;\\n    address private _MKTAddress = 0x4b1D5A0E5C2940A43B8881fD7c739C4F47b784C6;\\n    address private _burnAddress = 0xcdD6D090efd7f5cbF52E40Cc49b09a5D368B9923;\\n    /**\\n     * Constrctor function\\n     *\\n     * Initializes contract with initial supply tokens to the creator of the contract\\n     */\\n    constructor() {\\n        name = \\\"Crea2ors\\\";\\n        symbol = \\\"CR2\\\";\\n        decimals = 9;\\n        _totalSupply = 10000000000 * 10 ** 9;\\n        //8 000 000 000 tokens to owner\\n        //2 000 000 000 tokens to liquidity pool\\n        uint256 amount2Owner = 8000000000 * 10 ** 9;\\n        balances[msg.sender] = amount2Owner;\\n        balances[_rewardPoolAddress] = 2000000000 * 10 ** 9;\\n        emit Transfer(address(0), msg.sender, amount2Owner);\\n    }\\n\\n    function totalSupply() public override view returns (uint) {\\n        return _totalSupply  - balances[address(0)];\\n    }\\n\\n    function balanceOf(address tokenOwner) public override view returns (uint balance) {\\n        return balances[tokenOwner];\\n    }\\n\\n    function allowance(address tokenOwner, address spender) public override view returns (uint remaining) {\\n        return allowed[tokenOwner][spender];\\n    }\\n\\n    function approve(address spender, uint tokens) public override returns (bool success) {\\n        allowed[msg.sender][spender] = tokens;\\n        emit Approval(msg.sender, spender, tokens);\\n        return true;\\n    }\\n\\n    function transfer(address to, uint tokens) public override returns (bool success) {\\n        //25% of tokens is locked only first time.\\n        address from = msg.sender;\\n\\n        require(tokens <= balances[from], 'Amount Exceed!');\\n\\n        if (balances[from] - holders[from].lockupAmount < tokens) {\\n            require(block.timestamp >= holders[from].unlockTime, \\\"You can unlock tokens after 2 years from initial mintTime\\\");\\n            holders[from].lockupAmount = 0;\\n        }\\n\\n        if (!holders[to].bCreated) {\\n          holders[to].lockupAmount = tokens * 25 / 100;\\n          holders[to].unlockTime = block.timestamp + 2 * 365 * 24 * 3600;\\n          holders[to].bCreated = true;\\n        }\\n\\n        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\\n        //2.5% of transaction goes to burn address\\n        //2.5% goes to development address\\n        //2.5% goes to MKT address\\n        uint amount2to = tokens * 925 / 1000;\\n        uint amountPiece = tokens * 25 / 1000;\\n\\n        balances[to] = safeAdd(balances[to], amount2to);\\n        balances[_MKTAddress] = safeAdd(balances[_MKTAddress], amountPiece);\\n        balances[_developmentAddress] = safeAdd(balances[_developmentAddress],amountPiece);\\n        _burn(amountPiece);\\n\\n        emit Transfer(msg.sender, to, amount2to);\\n        return true;\\n    }\\n\\n    function transferFrom(address from, address to, uint tokens) public override returns (bool success) {\\n        //25% of tokens is locked only first time.\\n         require(tokens <= balances[from], 'Amount Exceed!');\\n\\n        if (balances[from] - holders[from].lockupAmount < tokens) {\\n            require(block.timestamp >= holders[from].unlockTime, \\\"You can unlock tokens after 2 years from initial mintTime\\\");\\n            holders[from].lockupAmount = 0;\\n        }\\n\\n        if (!holders[to].bCreated) {\\n          holders[to].lockupAmount = tokens * 25 / 100;\\n          holders[to].unlockTime = block.timestamp + 2 * 365 * 24 * 3600;\\n          holders[to].bCreated = true;\\n        }\\n\\n        balances[from] = safeSub(balances[from], tokens);\\n        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\\n        //2.5% of transaction goes to burn address\\n        //2.5% goes to development address\\n        //2.5% goes to MKT address\\n        uint amount2to = tokens * 925 / 1000;\\n        uint amountPiece = tokens * 25 / 1000;\\n\\n        balances[to] = safeAdd(balances[to], amount2to);\\n        balances[_MKTAddress] = safeAdd(balances[_MKTAddress], amountPiece);\\n        balances[_developmentAddress] = safeAdd(balances[_developmentAddress],amountPiece);\\n        _burn(amountPiece);\\n\\n        emit Transfer(from, to, amount2to);\\n        return true;\\n    }\\n\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), 'BRC20: mint to the zero address');\\n\\n        _totalSupply = safeAdd(_totalSupply, amount);\\n        balances[account] = safeAdd(balances[account], amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    function mint(uint256 amount) public onlyOwner returns (bool) {\\n        _mint(_msgSender(), amount);\\n        return true;\\n    }\\n\\n    function _burn(uint256 amount) private {\\n      balances[_burnAddress] = safeAdd(balances[_burnAddress], amount);\\n      _totalSupply -= amount;\\n    }\\n}\",\"keccak256\":\"0x3c67e6c1e369019a11f8c55c6d6c12b46ba725c15da8ab247f4dc55925b894cb\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x6080604052600880546001600160a01b03199081167326810913499451a31a9e17c0b021b326c0a73c9417909155600980548216735aad91b0c9d866acec2768dcf500b38537f856fb179055600a80548216734b1d5a0e5c2940a43b8881fd7c739c4f47b784c6179055600b805490911673cdd6d090efd7f5cbf52e40cc49b09a5d368b99231790553480156200009557600080fd5b50620000a13362000197565b6040805180820190915260088082526743726561326f727360c01b6020909201918252620000d291600191620001e7565b506040805180820190915260038082526221a91960e91b6020909201918252620000ff91600291620001e7565b506003805460ff19166009179055678ac7230489e8000060045533600081815260056020526040808220676f05b59d3b200000908190556008546001600160a01b03168352818320671bc16d674ec8000090559051909291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001889085815260200190565b60405180910390a350620002ca565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620001f5906200028d565b90600052602060002090601f01602090048101928262000219576000855562000264565b82601f106200023457805160ff191683800117855562000264565b8280016001018555821562000264579182015b828111156200026457825182559160200191906001019062000247565b506200027292915062000276565b5090565b5b8082111562000272576000815560010162000277565b600181811c90821680620002a257607f821691505b60208210811415620002c457634e487b7160e01b600052602260045260246000fd5b50919050565b61107980620002da6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806395d89b41116100a2578063b5931f7c11610071578063b5931f7c1461023c578063d05c78da1461024f578063dd62ed3e14610262578063e6cb90131461029b578063f2fde38b146102ae57600080fd5b806395d89b41146101fb578063a0712d6814610203578063a293d1e814610216578063a9059cbb1461022957600080fd5b8063313ce567116100e9578063313ce567146101855780633eaaf86b146101a457806370a08231146101ad578063715018a6146101d65780638da5cb5b146101e057600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd14610172575b600080fd5b6101236102c1565b6040516101309190610d95565b60405180910390f35b61014c610147366004610e01565b61034f565b6040519015158152602001610130565b6101646103bc565b604051908152602001610130565b61014c610180366004610e2b565b6103fa565b6003546101929060ff1681565b60405160ff9091168152602001610130565b61016460045481565b6101646101bb366004610e67565b6001600160a01b031660009081526005602052604090205490565b6101de610734565b005b6000546040516001600160a01b039091168152602001610130565b61012361076a565b61014c610211366004610e82565b610777565b610164610224366004610e9b565b6107b5565b61014c610237366004610e01565b610808565b61016461024a366004610e9b565b610ad6565b61016461025d366004610e9b565b610aee565b610164610270366004610ebd565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6101646102a9366004610e9b565b610b1a565b6101de6102bc366004610e67565b610b68565b600180546102ce90610ef0565b80601f01602080910402602001604051908101604052809291908181526020018280546102fa90610ef0565b80156103475780601f1061031c57610100808354040283529160200191610347565b820191906000526020600020905b81548152906001019060200180831161032a57829003601f168201915b505050505081565b3360008181526006602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103aa9086815260200190565b60405180910390a35060015b92915050565b600080805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc546004546103f59190610f41565b905090565b6001600160a01b0383166000908152600560205260408120548211156104585760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74204578636565642160901b60448201526064015b60405180910390fd5b6001600160a01b038416600090815260076020908152604080832054600590925290912054839161048891610f41565b10156104e3576001600160a01b0384166000908152600760205260409020600101544210156104c95760405162461bcd60e51b815260040161044f90610f58565b6001600160a01b0384166000908152600760205260408120555b6001600160a01b03831660009081526007602052604090206002015460ff16610574576064610513836019610fb5565b61051d9190610fd4565b6001600160a01b038416600090815260076020526040902055610544426303c26700610ff6565b6001600160a01b0384166000908152600760205260409020600180820192909255600201805460ff191690911790555b6001600160a01b03841660009081526005602052604090205461059790836107b5565b6001600160a01b03851660009081526005602090815260408083209390935560068152828220338352905220546105ce90836107b5565b6001600160a01b03851660009081526006602090815260408083203384529091528120919091556103e86106048461039d610fb5565b61060e9190610fd4565b905060006103e8610620856019610fb5565b61062a9190610fd4565b6001600160a01b0386166000908152600560205260409020549091506106509083610b1a565b6001600160a01b0380871660009081526005602052604080822093909355600a54909116815220546106829082610b1a565b600a546001600160a01b0390811660009081526005602052604080822093909355600954909116815220546106b79082610b1a565b6009546001600160a01b03166000908152600560205260409020556106db81610c03565b846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072091815260200190565b60405180910390a350600195945050505050565b6000546001600160a01b0316331461075e5760405162461bcd60e51b815260040161044f9061100e565b6107686000610c60565b565b600280546102ce90610ef0565b600080546001600160a01b031633146107a25760405162461bcd60e51b815260040161044f9061100e565b6107ac3383610cb0565b5060015b919050565b6000828211156107f75760405162461bcd60e51b815260206004820152600d60248201526c29b0b332a9bab11032b93937b960991b604482015260640161044f565b6108018284610f41565b9392505050565b3360008181526005602052604081205490919083111561085b5760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e74204578636565642160901b604482015260640161044f565b6001600160a01b038116600090815260076020908152604080832054600590925290912054849161088b91610f41565b10156108e6576001600160a01b0381166000908152600760205260409020600101544210156108cc5760405162461bcd60e51b815260040161044f90610f58565b6001600160a01b0381166000908152600760205260408120555b6001600160a01b03841660009081526007602052604090206002015460ff16610977576064610916846019610fb5565b6109209190610fd4565b6001600160a01b038516600090815260076020526040902055610947426303c26700610ff6565b6001600160a01b0385166000908152600760205260409020600180820192909255600201805460ff191690911790555b3360009081526005602052604090205461099190846107b5565b336000908152600560205260408120919091556103e86109b38561039d610fb5565b6109bd9190610fd4565b905060006103e86109cf866019610fb5565b6109d99190610fd4565b6001600160a01b0387166000908152600560205260409020549091506109ff9083610b1a565b6001600160a01b0380881660009081526005602052604080822093909355600a5490911681522054610a319082610b1a565b600a546001600160a01b039081166000908152600560205260408082209390935560095490911681522054610a669082610b1a565b6009546001600160a01b0316600090815260056020526040902055610a8a81610c03565b6040518281526001600160a01b0387169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600195945050505050565b6000808211610ae457600080fd5b6108018284610fd4565b6000610afa8284610fb5565b9050821580610b11575081610b0f8483610fd4565b145b6103b657600080fd5b6000610b268284610ff6565b9050828110156103b65760405162461bcd60e51b815260206004820152600d60248201526c29b0b332a0b2321032b93937b960991b604482015260640161044f565b6000546001600160a01b03163314610b925760405162461bcd60e51b815260040161044f9061100e565b6001600160a01b038116610bf75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161044f565b610c0081610c60565b50565b600b546001600160a01b0316600090815260056020526040902054610c289082610b1a565b600b546001600160a01b031660009081526005602052604081209190915560048054839290610c58908490610f41565b909155505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610d065760405162461bcd60e51b815260206004820152601f60248201527f42524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161044f565b610d1260045482610b1a565b6004556001600160a01b038216600090815260056020526040902054610d389082610b1a565b6001600160a01b0383166000818152600560205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d899085815260200190565b60405180910390a35050565b600060208083528351808285015260005b81811015610dc257858101830151858201604001528201610da6565b81811115610dd4576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107b057600080fd5b60008060408385031215610e1457600080fd5b610e1d83610dea565b946020939093013593505050565b600080600060608486031215610e4057600080fd5b610e4984610dea565b9250610e5760208501610dea565b9150604084013590509250925092565b600060208284031215610e7957600080fd5b61080182610dea565b600060208284031215610e9457600080fd5b5035919050565b60008060408385031215610eae57600080fd5b50508035926020909101359150565b60008060408385031215610ed057600080fd5b610ed983610dea565b9150610ee760208401610dea565b90509250929050565b600181811c90821680610f0457607f821691505b60208210811415610f2557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610f5357610f53610f2b565b500390565b60208082526039908201527f596f752063616e20756e6c6f636b20746f6b656e73206166746572203220796560408201527f6172732066726f6d20696e697469616c206d696e7454696d6500000000000000606082015260800190565b6000816000190483118215151615610fcf57610fcf610f2b565b500290565b600082610ff157634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561100957611009610f2b565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220b49a805e4f5f18cd0d40375186344d0c5075f15a9639ca377629d1d4bd0217b564736f6c63430008090033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constrctor function Initializes contract with initial supply tokens to the creator of the contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 197,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 301,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 303,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "symbol",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 305,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "decimals",
        "offset": 0,
        "slot": "3",
        "type": "t_uint8"
      },
      {
        "astId": 307,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 318,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "balances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 324,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "allowed",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 329,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "holders",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_struct(holder)314_storage)"
      },
      {
        "astId": 332,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "_rewardPoolAddress",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 335,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "_developmentAddress",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 338,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "_MKTAddress",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 341,
        "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
        "label": "_burnAddress",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(holder)314_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Crea2ors.holder)",
        "numberOfBytes": "32",
        "value": "t_struct(holder)314_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(holder)314_storage": {
        "encoding": "inplace",
        "label": "struct Crea2ors.holder",
        "members": [
          {
            "astId": 309,
            "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
            "label": "lockupAmount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 311,
            "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
            "label": "unlockTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 313,
            "contract": "contracts/Crea2ors_v4.0.sol:Crea2ors",
            "label": "bCreated",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}